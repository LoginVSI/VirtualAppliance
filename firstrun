#!/bin/bash

# add first_run script
netadapter=$(ip -o addr show up primary scope global | while read -r num dev fam addr rest; do 
        if [[ ${dev} != docker* && ${dev} != br-* ]]; then
            echo ${dev%/*}; 
        fi     
    done
    )
ip=$(ip -o addr show $netadapter primary scope global | while read -r num dev fam addr rest; do 
        if [[ ${dev} != docker* ]]; then
            echo ${addr%/*}; 
        fi       
    done
    )
gateway=$(ip -o route list | grep default | while read -r default via gateway dev net; do echo $gateway;done )
netmask=$(ifconfig $netadapter | sed -rn '2s/ .*:(.*)$/\1/p')
nameserversarray=$(cat /etc/resolv.conf | grep -i nameserver|head -n2|cut -d ' ' -f2)
nameservers=$(echo $(echo "${nameserversarray[@]}"))
broadcast=$(ip a s dev $netadapter | awk '/inet / {print $4}')
dnssuffix=$(grep search /etc/resolv.conf | while read -r search suffix; do echo $suffix;done )
if [ ! -f "/loginvsi/first_run.chk" ]; then
trap 'echo "You cannott cancel this script"' SIGINT
    # check for interactive shell
    if ! grep -q "noninteractive" /proc/cmdline ; then
        stty sane

        # ask questions
        echo "Welcome to LoginVSI NG!(tm)"
        echo "Please help answer the following questions to get the system setup..."
        
        read -ep " Please enter your preferred hostname: " -i "$(hostname) " new_hostname
        read -ep " Please enter your preferred domain: " -i "local " new_domain
        read -ep " Please choose a network configuration mode: dhcp or static (D/s) " network
        case $network in
            s|S)
                read -ep " Please provide the new ip address/subnet ($ip): " new_ip
                read -ep " Please provide the netmask ($netmask): " new_netmask
                read -ep " Please provide the default gateway ($gateway): " new_gateway
                read -ep " Please provide the nameservers ($nameservers) " new_nameservers
                read -ep " Please provide the dns search suffix ($dnssuffix) " new_dnssuffix
                read -ep " Please provide the broadcast address ($broadcast) " new_broadcast

                [[ ! -z "$new_ip" ]] && ip=$new_ip                                
                [[ ! -z "$new_netmask" ]] && netmask=$new_netmask
                [[ ! -z "$new_gateway" ]] && gateway=$new_gateway
                [[ ! -z "$new_nameservers" ]] && nameservers=$new_nameservers
                [[ ! -z "$new_dnssuffix" ]] && dnssuffix=$new_dnssuffix
                [[ ! -z "$new_broadcast" ]] && broadcast=$new_broadcast
                
                echo "
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

source /etc/network/interfaces.d/*

# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
auto $netadapter
iface $netadapter inet static        
    address $ip
    netmask $netmask
    gateway $gateway
    dns-search $dnssuffix
    nameservers $nameservers
                " > /etc/network/interfaces
                ;;
            *)
                echo "nothing to do";;
        esac

        while :       
        do        
            read -ersp " Please enter a new password for administrator: " password
            read -ersp " Please confirm the new password: " password2
            if [ $password != $password2 ]; then
                echo "Passwords do not match, try again..."
            else
                echo "administrator:$password" | chpasswd
                echo "Password updated successfully"
                break
            fi
        done
    fi

    # print status message
    echo "Preparing your server; this may take a few minutes and will restart the server..."

    # set fqdn
     [[ ! -z "$new_hostname" ]] && new_hostname=$(hostname)
     [[ ! -z "$new_domain" ]] && new_domain="local"
     
    fqdn="$new_hostname.$new_domain"
    echo " Setting fqdn: $fqdn"
    echo " Setting hostname: $new_hostname"
    # update hostname
    echo "$new_hostname" > /etc/hostname
    sed -i "s@unattended.unattended@$fqdn@g" /etc/hosts
    sed -i "s@unattended@$new_hostname@g" /etc/hosts
    
    hostname "$new_hostname"


    chmod +x /usr/bin/loginvsid
    chown root:root /usr/bin/loginvsid

    #sed -i s,IMAGE_TAG=stable,IMAGE_TAG=latest, /loginvsi/Systems/All/.env
    sed -i s,GATEWAY_PORT=3000,GATEWAY_PORT=443, /loginvsi/Systems/All/.env
    sed -i s,HOST_URL=https://localhost.loginvsi.com:3000,HOST_URL=https://${fqdn},  /loginvsi/Systems/All/.env
    systemctl enable loginvsid 
    touch -f /loginvsi/first_run.chk
    head -n -2 /etc/issue > /etc/issue.tmp; mv /etc/issue.tmp /etc/issue
    echo "
    
Login VSI appliance is configured! 
Please use your browser to go to https://${ip} or https://${fqdn}" >> /etc/issue

trap SIGINT
#    reboot    
   
fi